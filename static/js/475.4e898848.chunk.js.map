{"version":3,"file":"static/js/475.4e898848.chunk.js","mappings":"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","sources":["components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  max-width: 1800px;\n`;\n\nexport const GoBack = styled(Link)`\n  text-decoration: none;\n  background-color: grey;\n  padding: 5px;\n  border-radius: 3px;\n  color: white;\n  margin: 10px;\n  display: inline-block;\n  width: 70px;\n  align-items: center;\n  justify-content: center;\n\n  :hover,\n  :focus {\n    background-color: orange;\n  }\n`;\n\nexport const MainSection = styled.section`\n  display: flex;\n  align-items: flex-start;\n  margin: 0px 10px;\n  max-width: 900px;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n  object-fit: contain;\n`;\n\nexport const MainInformation = styled.div`\n  padding: 0px 50px;\n`;\n\nexport const FilmTitle = styled.h1`\n  margin: 0 auto 15px;\n  font-size: 26px;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nexport const BoldText = styled.p`\n  font-weight: 700;\n  margin: 0 0 13px 0;\n  font-size: 20px;\n`;\n\nexport const NormalText = styled.p`\n  margin: 0 0 23px 0;\n  font-size: 18px;\n`;\n\nexport const InfoSection = styled.section`\n  margin: 0 10px;\n  padding: 30px 0;\n`;\n\nexport const InfoDiv = styled.div`\n  display: flex;\n  max-width: 886px;\n`;\n\nexport const InfoList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\nexport const InfoLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 20px;\n  font-weight: 500;\n  :hover,\n  :focus {\n    color: orange;\n  }\n`;\n\nexport const Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 450px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding: 0;\n  margin: 0 auto;\n  gap: 2px;\n  justify-content: center;\n`;\n\nexport const ItemList = styled.li`\n  flex-basis: calc((100%-16px) / 6);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 14px;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 16px;\n  margin: 5px 0 0;\n  padding: 3px 15px;\n\n  :hover,\n  :focus {\n    color: orange;\n  }\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchFilm, fetchSimilarFilms } from 'api/api';\nimport {\n  GoBack,\n  MainSection,\n  FilmTitle,\n  InfoSection,\n  MainInformation,\n  BoldText,\n  NormalText,\n  InfoList,\n  InfoLink,\n  InfoDiv,\n  Img,\n  Main,\n  List,\n  ItemList,\n  Aside,\n  ItemLink,\n} from './Movie.styled';\n\nexport default function Movie() {\n  const movieID = useParams();\n  const [movie, setMovie] = useState(null);\n  const [similarMovies, setSimilarMovies] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchFilm(movieID.movieID).then(data => setMovie(data));\n    fetchSimilarFilms(movieID.movieID).then(data => setSimilarMovies(data));\n    console.log(similarMovies);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieID.movieID]);\n\n  if (!movie) {\n    return;\n  } else\n    return (\n      <Main>\n        <div>\n          <GoBack to={backLinkHref}>Go back</GoBack>\n          <MainSection>\n            <Img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-1-3.jpg'\n              }\n              alt={movie.title ?? movie.name}\n              width=\"200\"\n            ></Img>\n            <MainInformation>\n              <FilmTitle>\n                {movie.title || movie.name} ({movie.release_date.slice(0, 4)})\n              </FilmTitle>\n              <BoldText color=\"orange\">\n                User Score: {Math.round(movie.vote_average * 10)}%\n              </BoldText>\n              <BoldText>Overview</BoldText>\n              <NormalText>{movie.overview}</NormalText>\n              <BoldText>Ganres</BoldText>\n              <NormalText>\n                {movie.genres.map(genre => (\n                  <span key={genre.id}>{genre.name} </span>\n                ))}\n              </NormalText>\n            </MainInformation>\n          </MainSection>\n\n          <InfoSection>\n            <BoldText>Additional information</BoldText>\n            <InfoDiv>\n              <InfoList>\n                <li>\n                  <InfoLink to=\"cast\" state={{ from: backLinkHref }}>\n                    Cast\n                  </InfoLink>\n                </li>\n                <li>\n                  <InfoLink to=\"reviews\" state={{ from: backLinkHref }}>\n                    Reviews\n                  </InfoLink>\n                </li>\n              </InfoList>\n              <Outlet />\n            </InfoDiv>\n          </InfoSection>\n        </div>\n        <Aside>\n          <h3>Similar movies</h3>\n          <List>\n            {similarMovies &&\n              similarMovies.map(movie => {\n                return (\n                  <ItemList key={movie.id}>\n                    <img\n                      src={\n                        movie.poster_path\n                          ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                          : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-1-3.jpg'\n                      }\n                      alt={movie.title ?? movie.name}\n                      width=\"90\"\n                    ></img>\n                    <ItemLink\n                      to={`${movie.id}`}\n                      state={{ from: location }}\n                      element={<Movie />}\n                    >\n                      {movie.title || movie.name}\n                    </ItemLink>\n                  </ItemList>\n                );\n              })}\n          </List>\n        </Aside>\n      </Main>\n    );\n}\n"],"names":["Main","styled","GoBack","Link","MainSection","Img","MainInformation","FilmTitle","BoldText","NormalText","InfoSection","InfoDiv","InfoList","InfoLink","Aside","List","ItemList","ItemLink","Movie","movieID","useParams","useState","movie","setMovie","similarMovies","setSimilarMovies","location","useLocation","backLinkHref","state","from","useEffect","fetchFilm","then","data","fetchSimilarFilms","console","log","to","src","poster_path","alt","title","name","width","release_date","slice","color","Math","round","vote_average","overview","genres","map","genre","id","element"],"sourceRoot":""}