{"version":3,"file":"static/js/691.6df60930.chunk.js","mappings":"8OAEaA,EAAOC,EAAAA,EAAAA,KAAH,+GAMJC,EAAOD,EAAAA,EAAAA,KAAH,2IAQJE,EAAQF,EAAAA,EAAAA,MAAH,kIAQLG,EAASH,EAAAA,EAAAA,OAAH,0PAaNI,EAAOJ,EAAAA,EAAAA,GAAH,oK,iBC/BXK,EAAiBC,EAAAA,MAAW,kBAChC,4BADgC,IAG5BC,EAAQD,EAAAA,MAAW,kBAAM,4BAAN,IAEV,SAASE,EAAT,GAA4B,IAAVC,EAAS,EAATA,MAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA0BA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMT,EAAQO,EAAaG,IAAI,SAC3BV,IAAOW,EAAAA,EAAAA,IAAkBX,GAAOY,MAAK,SAAAC,GAAI,OAAIR,EAAUQ,EAAd,GAC9C,GAAE,CAACN,KAEJE,EAAAA,EAAAA,YAAU,WACM,KAAVT,IACFW,EAAAA,EAAAA,IAAkBX,GAAOY,MAAK,SAAAC,GAAI,OAAIR,EAAUQ,EAAd,GAErC,GAAE,CAACb,KAGF,SAACZ,EAAD,WACE,UAAC,EAAA0B,SAAD,WACGhB,IAAS,SAACF,EAAD,KACRE,IACA,UAACR,EAAD,CAAMyB,SAxBO,SAAAC,GACnBA,EAAEC,iBACFhB,EAASC,GAETM,EAD6B,KAAVN,EAAe,CAAEF,MAAOE,GAAU,CAAC,GAEtDC,EAAS,GACV,EAkBO,WACE,SAACZ,EAAD,CAAO2B,KAAK,OAAOhB,MAAOA,EAAOiB,SA9BtB,SAAAH,GACnB,IAAMhB,EAAQgB,EAAEI,OAAOlB,MAAMmB,cAAcC,OAC3CnB,EAASH,EACV,KA4BS,SAACR,EAAD,CAAQ0B,KAAK,SAAb,uBAGHd,IACC,SAACX,EAAD,WACE,SAACC,EAAD,CAAgBU,OAAQA,UAMnC,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Form = styled.form`\n  width: 25%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  font-size: 20px;\n  padding: 5px;\n  border: solid 2px orange;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  color: black;\n  text-transform: uppercase;\n  font-weight: 700;\n  border-radius: 3px;\n  border: solid 2px orange;\n  :hover,\n  :focus {\n    background-color: orange;\n    color: white;\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding: 0;\n  margin: 0 auto;\n  gap: 10px;\n  justify-content: center;\n`;\n","import React, { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Main, Input, Form, Button, List } from './Movies.styled';\nimport PropTypes from 'prop-types';\nimport { fetchFilmsByQuery } from 'api/api';\nconst ListOfContacts = React.lazy(() =>\n  import('../../components/ListOfMovies/listOfMovies')\n);\nconst Movie = React.lazy(() => import('../../components/Movie/Movie'));\n\nexport default function Movies({ movie }) {\n  const [query, setQuery] = useState('');\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    const query = e.target.value.toLowerCase().trim();\n    setValue(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(value);\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n    setValue('');\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) fetchFilmsByQuery(query).then(data => setMovies(data));\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (query !== '') {\n      fetchFilmsByQuery(query).then(data => setMovies(data));\n    }\n  }, [query]);\n\n  return (\n    <Main>\n      <Suspense>\n        {movie && <Movie />}\n        {!movie && (\n          <Form onSubmit={handleSubmit}>\n            <Input type=\"text\" value={value} onChange={handleChange}></Input>\n            <Button type=\"submit\">Search</Button>\n          </Form>\n        )}\n        {movies && (\n          <List>\n            <ListOfContacts movies={movies} />\n          </List>\n        )}\n      </Suspense>\n    </Main>\n  );\n}\n\nMovies.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n  }),\n};\n"],"names":["Main","styled","Form","Input","Button","List","ListOfContacts","React","Movie","Movies","movie","useState","query","setQuery","value","setValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","fetchFilmsByQuery","then","data","Suspense","onSubmit","e","preventDefault","type","onChange","target","toLowerCase","trim"],"sourceRoot":""}